Write a python script to perform CRUD operation on following table of "ESM.db" database.

Employee ( eid, ename, dept, basic, branch). eid must be primary key.

Department : Account, Inventory, IT, HR.

Peform Following Operation.

1. Create table
import sqlite3 as sq
con=sq.connect("c:\\sqlite\\emp.db")
q="create table employee(eid int primary key,ename text,dept text,basic int ,branch text)"
cur=con.cursor()
cur.execute(q)

2. Insert 5 Records directly, 5 records using tuple and 5 records using taking input from user
#insert record directy

q1="insert into employee values(1,'jay','Account',5000,'surat'),(2,'sagar','IT',6000,'vyara'),(3,'vatsal','HR',7000,'bardoli'),(4,'happy','IT',8000,'surat'),(5,'harsh','Inventory',3000,'bardoli')"
cur=con.cursor()
cur.execute(q)
#output
+-----+--------+-----------+-------+---------+
| eid | ename  |   dept    | basic | branch  |
+-----+--------+-----------+-------+---------+
| 1   | jay    | Account   | 5000  | surat   |
| 2   | sagar  | IT        | 6000  | vyara   |
| 3   | vatsal | HR        | 7000  | bardoli |
| 4   | happy  | IT        | 8000  | surat   |
| 5   | harsh  | Inventory | 3000  | bardoli |
+-----+--------+-----------+-------+---------+
# insert record using tuple

q="insert into employee values(?,?,?,?,?)"
v=[(6,'rakesh','inventory',7000,'surat'),(7,'arora','Account',5000,'bardoli'),(8,'arman','HR',4000,'vyara'),(9,'vishal','IT',9000,'baruch'),(10,'amit','Account',6000,'surat')]
cur=con.cursor()
cur.executemany(q,v)
#output
+-----+--------+-----------+-------+---------+
| eid | ename  |   dept    | basic | branch  |
+-----+--------+-----------+-------+---------+
| 6   | rakesh | inventory | 7000  | surat   |
| 7   | arora  | Account   | 5000  | bardoli |
| 8   | arman  | HR        | 4000  | vyara   |
| 9   | vishal | IT        | 9000  | baruch  |
| 10  | amit   | Account   | 6000  | surat   |
+-----+--------+-----------+-------+---------+
#insert record using user input
q="insert into employee values(?,?,?,?,?)"
l=[]
for i in range(5):
    eid=int(input("Enter employee id:"))
    ename=input("Enter name:")
    dept=input("Enter departnment:")
    basic=int(input("Enter basic salary:"))
    branch=input("Enter branch:")
    t=(eid,ename,dept,basic,branch)
    l.append(t)
cur=con.cursor()
cur.executemany(q,l)
#output
+-----+----------+-----------+-------+----------+
| eid |  ename   |   dept    | basic |  branch  |
+-----+----------+-----------+-------+----------+
| 11  | sagar    | HR        | 4000  | surat    |
| 12  | hiren    | IT        | 7000  | bardoli  |
| 13  | sai      | Account   | 2000  | vyara    |
| 14  | om       | IT        | 6000  | surat    |
| 15  | abhishek | Inventory | 5000  | vadodara |
+-----+----------+-----------+-------+----------+

3. Update records who are from "Surat" branch with increment in salary 10%.
ans:-
q="update employee set basic=basic+(basic*10/100) where branch='surat'"
cur=con.cursor()
cur.execute(q)

4. Print All records.
ans:-
q="select * from employee"
cur=con.cursor()
cur.execute(q)
v=cur.fetchall()	
for i in v:
    print(i)

5. Print records where dept is "HR" and "IT".
ans:-
q="select * from employee where dept='HR' or dept='IT'"	
cur=con.cursor()
cur.execute(q)
v=cur.fetchall()
for i in v:
    print(i)	

6. Print records in sorting order of department.
ans:-
q="select * from employee order by dept"
cur=con.cursor()
cur.execute(q)
v=cur.fetchall()
for i in v:
    print(i)
	
7. Print records where basic is >6000.
ans:-
q="select * from employee where basic >6000"	
cur=con.cursor()
cur.execute(q)
v=cur.fetchall()
for i in v:
    print(i)

8. Print records whrere employee name second character is "r".
ans:-
q="select * from employee where ename like '_r%'"
cur=con.cursor()
cur.execute(q)
v=cur.fetchall()
for i in v:
    print(i)

9. Grouping record of employee who are from "Account" and "Inventory".
ans:-
q="select * from employee  where dept in('Account','Inventory')group by dept"
cur=con.cursor()
cur.execute(q)
v=cur.fetchall()
for i in v:
    print(i)

10. Print all records based on branch name in descending order.
ans:-
q="select * from employee order by branch desc"
cur=con.cursor()
cur.execute(q)
v=cur.fetchall()
for i in v:
    print(i)
con.commit()
con.close()
